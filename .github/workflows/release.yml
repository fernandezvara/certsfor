name: ci

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - 
        name: Test
        run: go test ./... -count=1 -coverprofile=profile.cov

      - 
        name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov

  goreleaser:
    runs-on: ubuntu-latest
    needs: tests
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      -
        name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      -
        name: Run goreleaser - release
        if: success() && startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      -
        name: Run goreleaser - snapshot
        if: success() && !startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}  

  cleanup:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      -
        name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
